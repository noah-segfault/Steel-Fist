<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mech select variables 

currentIndex1 = 0;
currentIndex2 = 2;

select1 = obj_select_button1;
select2 = obj_select_button2;
select3 = obj_select_button3;

characters1 = obj_characters;
characters2 = obj_characters2;

maxIndex1 = 2;
minIndex1 = 0;

maxIndex2 = 2;
minIndex2 = 0;

counter1 = 0;
counter2 = 0;

sound1 = 0;
sound2 = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player 1 and 2 Navigation


// Player 1
if (keyboard_check_pressed(ord("A")))
{
    currentIndex1 -= 1;
}
else if (keyboard_check_pressed(ord("D")))
{
    currentIndex1 += 1;
}

if (keyboard_check_pressed(ord("E")))
{
    counter1 = 1;
    audio_play_sound(s_select,5,false);
    if (sound1 == 1)
    {
        global.selector1 = 1;
        global.sk1 = 1;
        audio_play_sound(s_korea,10,false);
    }
    else if (sound1 == 2)
    {
        global.selector1 = 2;
        global.ussr1 = 1;
        audio_play_sound(s_ussr,10,false);
    }
    else if (sound1 == 3)
    {
        global.selector1 = 3;
        global.usa1 = 1;
        audio_play_sound(s_usa,10,false);
    }
}
else if (keyboard_check_pressed(vk_escape))
{
    counter1 = 0;
}

// Player 2
if (keyboard_check_pressed(vk_left))
{
    currentIndex2 -= 1;
}
else if (keyboard_check_pressed(vk_right))
{
    currentIndex2 += 1;
}

if (keyboard_check_pressed(vk_enter))
{
    counter2 = 1;
    audio_play_sound(s_select,5,false);
    if (sound2 == 1)
    {
        global.selector2 = 1;
        global.sk2 = 1;
        audio_play_sound(s_korea,10,false);
    }
    else if (sound2 == 2)
    {
        global.selector2 = 2;
        global.ussr2 = 1;
        audio_play_sound(s_ussr,10,false);
    }
    else if (sound2 == 3)
    {
        global.selector2 = 3;
        global.usa2 = 1;
        audio_play_sound(s_usa,10,false);
    }
}
if (keyboard_check_pressed(vk_backspace))
{
    counter2 = 0;
}

if ((counter1 == 1) &amp;&amp; (counter2 == 1))
{
    instance_create(0,0,obj_fade3);
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Determine what is being selected

// Player 1
if (currentIndex1 == 0)
{
    select1.image_index = 1;
    characters1.image_index = 0;
    sound1 = 1;
}

if ((currentIndex1 &amp;&amp; currentIndex2) != 0)
{
    select1.image_index = 0;
}

if (currentIndex1 == 1)
{
    select2.image_index = 1;
    characters1.image_index = 1;
    
    sound1 = 2;
    
}

if ((currentIndex1 &amp;&amp; currentIndex2) != 1)
{
    select2.image_index = 0;
}

if (currentIndex1 == 2)
{
    select3.image_index = 1;
    characters1.image_index = 2;
    sound1 = 3;
}

if ((currentIndex1 &amp;&amp; currentIndex2) != 2)
{
    select3.image_index = 0;
}


// Player 2

if (currentIndex2 == 0)
{
    select1.image_index = 2;
    characters2.image_index = 0;
    
    sound2 = 1;
    
} 
else if (currentIndex2 == 1)
{
    select2.image_index = 2;
    characters2.image_index = 1;
    
    sound2 = 2;
    
}
else if (currentIndex2 == 2)
{
    select3.image_index = 2;
    characters2.image_index = 2;
    
    sound2 = 3;
}


// If both are on the same character
/*
if (currentIndex1 == currentIndex2 == 0)
{
    select1.image_index = 3;
}
else if (currentIndex1 == currentIndex2 == 1)
{
    select2.image_index = 3;
}
else if (currentIndex1 == currentIndex2 == 2)
{
    select3.image_index = 3;
}
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Determine if values go over

if (currentIndex1 &gt; maxIndex1)
{
 currentIndex1 = minIndex1;
}
else if (currentIndex1 &lt; minIndex1)
{
 currentIndex1 = maxIndex1;
}

if (currentIndex2 &gt; maxIndex2)
{
 currentIndex2 = minIndex2;
}
else if (currentIndex2 &lt; minIndex2)
{
 currentIndex2 = maxIndex2;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
