<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Options for the menu

option = 0;
maxOption = 2;

_x = 32;

_y[0] = 256;
_y[1] = 256 + 58;
_y[2] = 256 + (58 * 2);

txt[0] = "Versus Mode";
txt[1] = "Controls";
txt[2] = "Quit";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu controls
if keyboard_check_pressed(vk_down) || keyboard_check_pressed(ord('S')) // Navigate the menu using W and A or Up and Down depending on how you swing baby
{
    option += 1;
}   
else if keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord('W'))
{
    option -= 1;
}

if (option &lt; 0)
{
    option = maxOption;
}
else if (option &gt; maxOption)
{
    option = 0;
}

if keyboard_check_pressed(vk_enter) || keyboard_check_pressed((ord('E'))) // Pick a room, any room
{
    audio_play_sound(s_select,10,false);
    switch option
    {
        case 0:
            //room_goto(room_characterselect)
            instance_create(0,0,obj_fade2);
        break;
        
        case 1:
            room_goto(room_controls)
        break;
        
        case 2:
            game_end()
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for assigners
if(instance_exists(obj_assigner2))
{
    with(obj_assigner2)
    {
        instance_destroy();
    }
}
if(instance_exists(obj_rounds))
{
    with(obj_assigner2)
    {
        instance_destroy();
    }
}
if(instance_exists(obj_rounds))
{
    with(obj_assigner2)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw menu up

draw_sprite(spr_arrow, 0, _x - 10, _y[option]); // Draw select arrow

// Draw text
draw_set_color(c_teal);
draw_set_font(font_menu);
draw_set_valign(fa_middle);

var i = 0;

while (i &lt;=  maxOption)
{
    draw_text(_x, _y[i], txt[i]);
    i += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
