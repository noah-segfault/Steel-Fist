<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sk_still_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stats for Gun (Strong in Korean)
spd = 11;
ammo1 = 4;
ammo2 = 6;
shootdir = 2;
image_speed = .25;
global.skDef = 3;

//global.sk1 = 0; // Comment out these two when you're not testing
//global.sk2 = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Recharge the primary ammo
ammo1 = 1;
show_debug_message("I did my job");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Recharge secondary ammo
ammo2 = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Basic movement player 1
if global.pauser != 0
{
if (global.sk1 == 1 &amp;&amp; keyboard_check(ord("A")))
{
    x-=spd;
    sprite_index = spr_sk_left;
    if (place_meeting(x-spd,y,obj_wall))
    {
        x+=spd
    }
    shootdir = 1;
    
}
else if (global.sk1 == 1 &amp;&amp; keyboard_check_released(ord("A")))
{
    sprite_index = spr_sk_still_left;
}

else if (global.sk1 == 1 &amp;&amp; keyboard_check(ord("D")))
{
    x+=spd;
    sprite_index = spr_sk_right;
    if (place_meeting(x+spd,y,obj_wall))
    {
        x-=spd
    }
    shootdir = 2;
}
else if (global.sk1 == 1 &amp;&amp; keyboard_check_released(ord("D")))
{
    sprite_index = spr_sk_still_right;
}

else if (global.sk1 == 1 &amp;&amp; keyboard_check(ord("W")))
{
    y-=spd;
    sprite_index = spr_sk_up;
    if (place_meeting(x,y-spd,obj_wall))
    {
        y+=spd
    }
    shootdir = 3;
}
else if (global.sk1 == 1 &amp;&amp; keyboard_check_released(ord("W")))
{
    sprite_index = spr_sk_still_up;
}

else if (global.sk1 == 1 &amp;&amp; keyboard_check(ord("S")))
{
    y+=spd;
    sprite_index = spr_sk_down;
    if (place_meeting(x,y+spd,obj_wall))
    {
        y-=spd
    }
    shootdir = 4;
}
else if (global.sk1 == 1 &amp;&amp; keyboard_check_released(ord("S")))
{
    sprite_index = spr_sk_still_down;
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Basic movement player 2
if global.pauser != 0
{
if (global.sk2 = 1 &amp;&amp; keyboard_check(vk_left))
{
    x-=spd;
    sprite_index = spr_sk_left;
    if (place_meeting(x-spd,y,obj_wall))
    {
        x+=spd
    }
    shootdir = 1;
}
else if (global.sk2 == 1 &amp;&amp; keyboard_check_released(vk_left))
{
    sprite_index = spr_sk_still_left;
}

else if (global.sk2 = 1 &amp;&amp; keyboard_check(vk_right))
{
    x+=spd;
    sprite_index = spr_sk_right;
    if (place_meeting(x+spd,y,obj_wall))
    {
        x-=spd
    }
    shootdir = 2;
}
else if (global.sk2 == 1 &amp;&amp; keyboard_check_released(vk_right))
{
    sprite_index = spr_sk_still_right;
}

else if (global.sk2 = 1 &amp;&amp; keyboard_check(vk_up))
{
    y-=spd;
    sprite_index = spr_sk_up;
    if (place_meeting(x,y-spd,obj_wall))
    {
        y+=spd
    }
    shootdir = 3;
}
else if (global.sk2 == 1 &amp;&amp; keyboard_check_released(vk_up))
{
    sprite_index = spr_sk_still_up;
}

else if (global.sk2 = 1 &amp;&amp; keyboard_check(vk_down))
{
    y+=spd;
    sprite_index = spr_sk_down;
    if (place_meeting(x,y+spd,obj_wall))
    {
        y-=spd
    }
    shootdir = 4;
}
else if (global.sk2 == 1 &amp;&amp; keyboard_check_released(vk_down))
{
    sprite_index = spr_sk_still_down;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Primary Weapon (K-Pop)
if (global.pauser != 0)
{
//Ammo Alarm
if (ammo1 &lt;= 0 &amp;&amp; !(alarm[1]))
{
  alarm[1] = 10;
}




// For player 1
if (global.sk1 = 1 &amp;&amp; keyboard_check_pressed(ord("F")) &amp;&amp; (ammo1 &gt; 0))
{
    var hitboxid
    hitboxid = instance_create(x,y,obj_sk_kpop); 
    ammo1 -= 1;  
    if (shootdir == 1)
    {
        with (hitboxid)
        {
            image_angle = 180;
        }
    }
    if (shootdir == 2)
    {
        with (hitboxid)
        {
            image_angle = 0;
        }
    }
    if (shootdir == 3)
    {
         with (hitboxid)
        {
            x += 10;
            image_angle = 90;
        }
    }
    if (shootdir == 4)
    {
         with (hitboxid)
        {
            x-=10;
            image_angle = 270;
        }
    }
}

// For player 2
if (global.sk2 = 1 &amp;&amp; keyboard_check(vk_enter) &amp;&amp; (ammo1 &gt; 0))
{
    var hitboxid
    hitboxid = instance_create(x,y,obj_sk_kpop); 
    ammo1 -= 1;  
    if (shootdir == 1)
    {
        with (hitboxid)
        {
            image_angle = 180;
        }
    }
    if (shootdir == 2)
    {
        with (hitboxid)
        {
            image_angle = 0;
        }
    }
    if (shootdir == 3)
    {
         with (hitboxid)
        {
            x += 10;
            image_angle = 90;
        }
    }
    if (shootdir == 4)
    {
         with (hitboxid)
        {
            x-=10;
            image_angle = 270;
        }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Secondary Weapon (Dash)
if (global.pauser != 0)
{
//Ammo Alarm
if (ammo2 &lt;= 0 &amp;&amp; !(alarm[0]))
{
  alarm[0] = 40;
}

if (global.sk1 == 1 &amp;&amp; keyboard_check(ord("G")) &amp;&amp; (ammo2 &gt; 0))
{
    
    if (shootdir == 1 &amp;&amp; global.sk1 == 1)
    {
       spd = 25;
       sprite_index = spr_sk_dleft;
       ammo2-=1;
       
    }
    if (shootdir == 2 &amp;&amp; global.sk1 == 1)
    {
       spd = 25;
       sprite_index = spr_sk_dright;
       ammo2-=1;
    }
    if (shootdir == 3 &amp;&amp; global.sk1 == 1 )
    {
       spd = 25;
       sprite_index = spr_sk_dup;
       ammo2-=1;
    }
    if (shootdir == 4 &amp;&amp; global.sk1 == 1)
    {
       spd = 25;
       sprite_index = spr_sk_ddown;
       ammo2-=1;
    }
}
else if (ammo2 == 0 || keyboard_check_released(ord('G')))
{
    spd = 8;
}

// For player 2
if (global.sk2 == 1 &amp;&amp; keyboard_check(vk_shift) &amp;&amp; (ammo2 &gt; 0) &amp;&amp; global.pauser != 0)
{
      
    if (shootdir == 1 &amp;&amp; global.sk2 == 1)
    {
       spd = 25;
       sprite_index = spr_sk_dleft;
       ammo2-=1;
       
    }
    if (shootdir == 2 &amp;&amp; global.sk2 == 1)
    {
       spd = 25;
       sprite_index = spr_sk_dright;
       ammo2-=1;
    }
    if (shootdir == 3 &amp;&amp; global.sk2 == 1 )
    {
       spd = 25;
       sprite_index = spr_sk_dup;
       ammo2-=1;
    }
    if (shootdir == 4 &amp;&amp; global.sk2 == 1)
    {
       spd = 25;
       sprite_index = spr_sk_ddown;
       ammo2-=1;
    }
}
else if (ammo2 == 0 || keyboard_check_released(vk_shift))
{
    spd = 8;
}

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
