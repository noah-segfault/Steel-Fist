<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ussr_still</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stats for McCrary
spd = 5;
ammo1 = 1;
ammo2 = 3;
shootdir = 2;
image_speed = .5;
global.ussrDef = 9;
//global.ussr1 = 1; // Comment out these two when you're not testing
//global.ussr2 = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Recharge the primary ammo
ammo1 = 1;
show_debug_message("I did my job");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Recharge the secondary ammo
ammo2 = 3;
show_debug_message("I did my job");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Basic movement player 1
if global.pauser != 0
{
if (global.ussr1 == 1 &amp;&amp; keyboard_check(ord("A")) &amp;&amp; global.toggle1 == 0)
{
    x-=spd;
    sprite_index = spr_ussr_left;
    if (place_meeting(x-spd,y,obj_wall))
    {
        x+=spd
    }
    shootdir = 1;
}

else if (global.ussr1 == 1 &amp;&amp; keyboard_check(ord("D")) &amp;&amp; global.toggle1 == 0)
{
    x+=spd;
    sprite_index = spr_ussr_right;
    if (place_meeting(x+spd,y,obj_wall))
    {
        x-=spd
    }
    shootdir = 2;
}

else if (global.ussr1 == 1 &amp;&amp; keyboard_check(ord("W")) &amp;&amp; global.toggle1 == 0)
{
    y-=spd;
    sprite_index = spr_ussr_up;
    if (place_meeting(x,y-spd,obj_wall))
    {
        y+=spd
    }
    shootdir = 3;
}

else if (global.ussr1 == 1 &amp;&amp; keyboard_check(ord("S")) &amp;&amp; global.toggle1 == 0)
{
    y+=spd;
    sprite_index = spr_ussr_down;
    if (place_meeting(x,y+spd,obj_wall))
    {
        y-=spd
    }
    shootdir = 4;
}

// Toggle on and off

if (global.toggle1 == 0 &amp;&amp; keyboard_check_pressed(ord("T")))
{
    global.toggle1 = 1;
}
else if (global.toggle1 == 1 &amp;&amp; keyboard_check_pressed(ord("T")))
{
    global.toggle1 = 0;
}

// Toggle Controls 
if (global.ussr1 == 1 &amp;&amp; keyboard_check(ord("A")) &amp;&amp; global.toggle1 == 1)
{
    x-=spd;
    if (place_meeting(x-spd,y,obj_wall))
    {
        x+=spd
    }
    
}

if (global.ussr1 == 1 &amp;&amp; keyboard_check(ord("D")) &amp;&amp; global.toggle1 == 1)
{
    x+=spd;
    if (place_meeting(x+spd,y,obj_wall))
    {
        x-=spd
    }
    
}

if (global.ussr1 == 1 &amp;&amp; keyboard_check(ord("W")) &amp;&amp; global.toggle1 == 1)
{
    y-=spd;
    if (place_meeting(x,y-spd,obj_wall))
    {
        y+=spd
    }
    
}

if (global.ussr1 == 1 &amp;&amp; keyboard_check(ord("S")) &amp;&amp; global.toggle1 == 1)
{
    y+=spd;
    if (place_meeting(x,y+spd,obj_wall))
    {
        y-=spd
    }
    
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Basic movement player 2
if (global.pauser != 0)
{
if (global.ussr2 == 1 &amp;&amp; keyboard_check(vk_left) &amp;&amp; global.toggle2 == 0)
{
    x-=spd;
    sprite_index = spr_ussr_left;
    if (place_meeting(x-spd,y,obj_wall))
    {
        x+=spd
    }
    shootdir = 1;
}

else if (global.ussr2 == 1 &amp;&amp; keyboard_check(vk_right) &amp;&amp; global.toggle2 == 0)
{
    x+=spd;
    sprite_index = spr_ussr_right;
    if (place_meeting(x+spd,y,obj_wall))
    {
        x-=spd
    }
    shootdir = 2;
}

else if (global.ussr2 == 1 &amp;&amp; keyboard_check(vk_up) &amp;&amp; global.toggle2 == 0)
{
    y-=spd;
    sprite_index = spr_ussr_up;
    if (place_meeting(x,y-spd,obj_wall))
    {
        y+=spd
    }
    shootdir = 3;
}

else if (global.ussr2 == 1 &amp;&amp; keyboard_check(vk_down) &amp;&amp; global.toggle2 == 0)
{
    y+=spd;
    sprite_index = spr_ussr_down;
    if (place_meeting(x,y+spd,obj_wall))
    {
        y-=spd
    }
    shootdir = 4;
}

// Toggle on and off

if (global.toggle2 == 0 &amp;&amp; keyboard_check_pressed(vk_rcontrol))
{
    global.toggle2 = 1;
}
else if (global.toggle2 == 1 &amp;&amp; keyboard_check_pressed(vk_rcontrol))
{
    global.toggle2 = 0;
}

// Toggle Controls 
if (global.ussr2 == 1 &amp;&amp; keyboard_check(vk_left) &amp;&amp; global.toggle2 == 1)
{
    x-=spd;
    if (place_meeting(x-spd,y,obj_wall))
    {
        x+=spd
    }
    
}

if (global.ussr2 == 1 &amp;&amp; keyboard_check(vk_right) &amp;&amp; global.toggle2 == 1)
{
    x+=spd;
    if (place_meeting(x+spd,y,obj_wall))
    {
        x-=spd
    }
    
}

if (global.ussr2 == 1 &amp;&amp; keyboard_check(vk_up) &amp;&amp; global.toggle2 == 1)
{
    y-=spd;
    if (place_meeting(x,y-spd,obj_wall))
    {
        y+=spd
    }
    
}

if (global.ussr2 == 1 &amp;&amp; keyboard_check(vk_down) &amp;&amp; global.toggle2 == 1)
{
    y+=spd;
    if (place_meeting(x,y+spd,obj_wall))
    {
        y-=spd
    }
    
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Primary Weapon (Homing Shot)
if (global.pauser != 0)
{
//Ammo Alarm
if (ammo1 &lt;= 0 &amp;&amp; !(alarm[1]))
{
  alarm[1] = 60;
}

// For player 1
if (global.ussr1 == 1 &amp;&amp; keyboard_check_pressed(ord("F")) &amp;&amp; (ammo1 &gt; 0))
{
    instance_create(x,y,obj_ussr_homing); 
    ammo1 -= 1;  
}

// For player 2
if (global.ussr2 == 1 &amp;&amp; keyboard_check(vk_enter) &amp;&amp; (ammo1 &gt; 0))
{
    instance_create(x,y,obj_ussr_homing);
    ammo1 -= 1;   
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Secondary Weapon (Shotgun)
if (global.pauser != 0)
{
// Ammo Count
if (ammo2 &lt;= 0 &amp;&amp; !(alarm[0]))
{
  alarm[0] = 50;
}




// For player 1
if (global.ussr1 == 1 &amp;&amp; keyboard_check_pressed(ord("G")) &amp;&amp; (ammo2 &gt; 0))
{
    
        var bulletid
        var bulletid1
        var bulletid2
        
        bulletid = instance_create(x,y,obj_ussr_bullet);
        bulletid1 = instance_create(x,y,obj_ussr_bullet);
        //bulletid1.direction +=10;
        //bulletid1.image_angle += 10;
        bulletid2 = instance_create(x,y,obj_ussr_bullet);
        //bulletid2.direction -=10;
        //bulletid2.image_angle -= 10;
        ammo2 -= 1;
        audio_play_sound(s_shotgun,5,false);
        show_debug_message(ammo2);
    if (shootdir == 1)
        {
            with(bulletid) 
            {
                motion_add(180,8);
            }
            with(bulletid1) 
            {
                motion_add(190,8);
            }
            with(bulletid2) 
            {
                motion_add(170,8);
            }
        }
    else if (shootdir == 2)
        {
            with(bulletid) 
            {
                motion_add(0,8);
            }
            with(bulletid1) 
            {
                motion_add(350,8);
            }
            with(bulletid2) 
            {
                motion_add(10,8);
            }
        }
    else if (shootdir == 3)
        {
            with(bulletid) 
            {
                motion_add(90,8);
            }
            with(bulletid1) 
            {
                motion_add(100,8);
            }
            with(bulletid2) 
            {
                motion_add(80,8);
            }
        }
    if (shootdir == 4)
        {
            with(bulletid) 
            {
                motion_add(270,8);
            }
            with(bulletid1) 
            {
                motion_add(280,8);
            }
            with(bulletid2) 
            {
                motion_add(260,8);
            }
        }
    
    
}

// For player 2
if (global.ussr2 = 1 &amp;&amp; keyboard_check_pressed(vk_shift) &amp;&amp; (ammo2 &gt; 0))
{
    var bulletid
    var bulletid1
    var bulletid2
    bulletid = instance_create(x,y,obj_ussr_bullet);
    bulletid1 = instance_create(x,y,obj_ussr_bullet);
    //bulletid.direction +=10;
    //bulletid.image_angle += 10;
    bulletid2 = instance_create(x,y,obj_ussr_bullet);
    //bulletid.direction -=10;
    //bulletid.image_angle -= 10; 
    audio_play_sound(s_shotgun,5,false);
    ammo2 -= 1;
    
    if (shootdir == 1)
        {
            with(bulletid) 
            {
                motion_add(180,8);
            }
            with(bulletid1) 
            {
                motion_add(190,8);
            }
            with(bulletid2) 
            {
                motion_add(170,8);
            }
        }
    else if (shootdir == 2)
        {
            with(bulletid) 
            {
                motion_add(0,8);
            }
            with(bulletid1) 
            {
                motion_add(350,8);
            }
            with(bulletid2) 
            {
                motion_add(10,8);
            }
        }
    else if (shootdir == 3)
        {
            with(bulletid) 
            {
                motion_add(90,8);
            }
            with(bulletid1) 
            {
                motion_add(100,8);
            }
            with(bulletid2) 
            {
                motion_add(80,8);
            }
        }
    if (shootdir == 4)
        {
            with(bulletid) 
            {
                motion_add(270,8);
            }
            with(bulletid1) 
            {
                motion_add(280,8);
            }
            with(bulletid2) 
            {
                motion_add(260,8);
            }
        }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
